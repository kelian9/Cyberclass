{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ActionsConstants } from \"../models/actions-constants.model\";\nexport const UserReducer = (state = {\n  userID: NaN,\n  person: {\n    phoneNumber: ''\n  },\n  userType: NaN,\n  nickName: '',\n  avatar: ''\n}, action) => {\n  switch (action.type) {\n    case ActionsConstants.SET_USER:\n      return {\n        userID: action.userID,\n        person: action.person,\n        userType: action.userType\n      };\n\n    case ActionsConstants.SET_AVATAR:\n      return _objectSpread({}, state, {\n        avatar: action.avatar\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Projects/cyberclass/src/store/reducers/user.reducer.ts"],"names":["ActionsConstants","UserReducer","state","userID","NaN","person","phoneNumber","userType","nickName","avatar","action","type","SET_USER","SET_AVATAR"],"mappings":";;;;;;AACA,SAASA,gBAAT,QAAiC,mCAAjC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAU,GAAC;AAC/BC,EAAAA,MAAM,EAAEC,GADuB;AAE/BC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAFuB;AAG/BC,EAAAA,QAAQ,EAAEH,GAHqB;AAI/BI,EAAAA,QAAQ,EAAE,EAJqB;AAK/BC,EAAAA,MAAM,EAAE;AALuB,CAAZ,EAMpBC,MANoB,KAML;AACd,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,gBAAgB,CAACY,QAAtB;AACI,aAAO;AACHT,QAAAA,MAAM,EAAEO,MAAM,CAACP,MADZ;AAEHE,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFZ;AAGHE,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAHd,OAAP;;AAMJ,SAAKP,gBAAgB,CAACa,UAAtB;AACI,+BACOX,KADP;AAEIO,QAAAA,MAAM,EAAEC,MAAM,CAACD;AAFnB;;AAKJ;AACI,aAAOP,KAAP;AAfR;AAiBP,CAxBM","sourcesContent":["import { User } from \"../../api/models/response/auth.response\";\r\nimport { ActionsConstants } from \"../models/actions-constants.model\";\r\n\r\nexport const UserReducer = (state:User={\r\n        userID: NaN,\r\n        person: { phoneNumber: '' },\r\n        userType: NaN,\r\n        nickName: '',\r\n        avatar: ''\r\n    }, action:any) => {\r\n        switch (action.type) {\r\n            case ActionsConstants.SET_USER:\r\n                return {\r\n                    userID: action.userID,\r\n                    person: action.person,\r\n                    userType: action.userType\r\n                }\r\n\r\n            case ActionsConstants.SET_AVATAR:\r\n                return {\r\n                    ...state,\r\n                    avatar: action.avatar\r\n                }\r\n        \r\n            default:\r\n                return state\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}