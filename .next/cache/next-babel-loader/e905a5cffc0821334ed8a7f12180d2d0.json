{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\cyberclass\\\\src\\\\components\\\\ui\\\\Slider\\\\Slider.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './Slider.module.scss';\nimport { useRef, useState, useEffect } from 'react';\n\nconst Slider = props => {\n  const sliderRef = useRef(null);\n  const slideRef = useRef(null);\n  let touches = [];\n  let slideWidth = null;\n  let slidesCount = null;\n  const {\n    0: slideIndex,\n    1: changeSlideIndex\n  } = useState(0);\n  const {\n    0: slideStyle,\n    1: changeSlideStyle\n  } = useState({});\n\n  const handleBack = () => {\n    if (slideIndex !== 0) {\n      changeSlideStyle({\n        left: (-slideWidth + 30) * (slideIndex - 1) + 'px'\n      });\n      changeSlideIndex(slideIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (slideIndex !== slidesCount - 1) {\n      changeSlideStyle({\n        left: (slideWidth - 30) * (slideIndex + 1) + 'px'\n      });\n      changeSlideIndex(slideIndex + 1);\n    }\n  };\n\n  const handleTouch = e => {\n    e.preventDefault();\n    touches.push(e.changedTouches[0]);\n  };\n\n  const handleTouchEnd = () => {\n    const touchDivision = touches[touches.length - 1].clientX - touches[0].clientX;\n    console.log(touches);\n    console.log(touchDivision);\n\n    if (touchDivision > slideWidth / 3) {\n      handleBack();\n    } else if (touchDivision < slideWidth / 3 && touchDivision < 0) {\n      handleNext();\n    }\n\n    touches = [];\n  };\n\n  useEffect(() => {\n    if (slideRef) {\n      slideWidth = slideRef.current.getBoundingClientRect().width;\n      slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.slider,\n    ref: sliderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.slider__btnWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnPrev,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnNext,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: styles.slider__container,\n    ref: slideRef,\n    style: slideStyle,\n    onTouchMove: handleTouch,\n    onTouchEnd: handleTouchEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/User/Projects/cyberclass/src/components/ui/Slider/Slider.tsx"],"names":["styles","useRef","useState","useEffect","Slider","props","sliderRef","slideRef","touches","slideWidth","slidesCount","slideIndex","changeSlideIndex","slideStyle","changeSlideStyle","handleBack","left","handleNext","handleTouch","e","preventDefault","push","changedTouches","handleTouchEnd","touchDivision","length","clientX","console","log","current","getBoundingClientRect","width","Math","ceil","scrollWidth","slider","slider__btnWrap","slider__btn","slider__btnPrev","slider__btnNext","slider__container","children"],"mappings":"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","sourcesContent":["import styles from './Slider.module.scss';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nconst Slider = (props) => {\r\n    const sliderRef = useRef(null);\r\n    const slideRef = useRef(null);\r\n\r\n    let touches = [];\r\n    let slideWidth = null;\r\n    let slidesCount = null;\r\n    const [slideIndex, changeSlideIndex] = useState(0);\r\n    const [slideStyle,changeSlideStyle] = useState({});\r\n\r\n    const handleBack = () => {\r\n        if(slideIndex !== 0) {\r\n            changeSlideStyle({\r\n                left: (-slideWidth + 30) * (slideIndex-1) + 'px'\r\n            })\r\n            changeSlideIndex(slideIndex - 1)\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if(slideIndex !== slidesCount - 1) {\r\n            changeSlideStyle({\r\n                left: (slideWidth - 30) * (slideIndex + 1) + 'px'\r\n            })\r\n            changeSlideIndex(slideIndex + 1)\r\n        }\r\n    }\r\n\r\n    const handleTouch = (e:any) => {\r\n        e.preventDefault()\r\n        touches.push(e.changedTouches[0])\r\n    }\r\n\r\n    const handleTouchEnd = () => {\r\n        const touchDivision = touches[touches.length - 1].clientX - touches[0].clientX;\r\n        console.log(touches)\r\n        console.log(touchDivision)\r\n        if(touchDivision > slideWidth/3) {\r\n            handleBack()\r\n        } else if (touchDivision < slideWidth/3 && touchDivision < 0) {\r\n            handleNext()\r\n        }\r\n        touches = [];\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(slideRef) {\r\n            slideWidth = slideRef.current.getBoundingClientRect().width;\r\n            slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className={styles.slider} ref={sliderRef}>\r\n            <div className={styles.slider__btnWrap}>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnPrev} onClick={handleBack}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnNext} onClick={handleNext}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n            </div>\r\n            <div className={styles.slider__container} ref={slideRef} style={slideStyle} onTouchMove={handleTouch} onTouchEnd={handleTouchEnd}>\r\n                {/* <div className={styles.slider__innerContainer}> */}\r\n                    { props.children }\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}