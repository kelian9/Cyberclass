{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\cyberclass\\\\src\\\\components\\\\ui\\\\Slider\\\\Slider.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './Slider.module.scss';\nimport { useRef, useState, useEffect } from 'react';\n\nvar Slider = function Slider(props) {\n  var sliderRef = useRef(null);\n  var slideRef = useRef(null);\n  var slideWidth = null;\n  var slidesCount = null;\n\n  var _useState = useState({}),\n      slideStyle = _useState[0],\n      changeSlideStyle = _useState[1];\n\n  var _useState2 = useState(0),\n      slideIndex = _useState2[0],\n      changeSlideIndex = _useState2[1];\n\n  var handleBack = function handleBack() {\n    if (slideIndex !== 0) {\n      changeSlideIndex(slideIndex - 1);\n      changeSlideStyle({\n        transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\n      });\n      console.log(slideIndex);\n    }\n  };\n\n  var handleNext = function handleNext() {\n    if (slideIndex !== slidesCount - 1) {\n      console.log(slidesCount);\n      changeSlideIndex(slideIndex + 1);\n      changeSlideStyle({\n        transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\n      });\n      console.log(slideIndex);\n    }\n  };\n\n  useEffect(function () {\n    if (slideRef) {\n      slideWidth = slideRef.current.getBoundingClientRect().width;\n      slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.slider,\n    ref: sliderRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.slider__container,\n    ref: slideRef,\n    style: {\n      transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, props.children), __jsx(\"div\", {\n    className: styles.slider__btnWrap,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnPrev,\n    onClick: handleBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnNext,\n    onClick: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/User/Projects/cyberclass/src/components/ui/Slider/Slider.tsx"],"names":["styles","useRef","useState","useEffect","Slider","props","sliderRef","slideRef","slideWidth","slidesCount","slideStyle","changeSlideStyle","slideIndex","changeSlideIndex","handleBack","transform","console","log","handleNext","current","getBoundingClientRect","width","Math","ceil","scrollWidth","slider","slider__container","children","slider__btnWrap","slider__btn","slider__btnPrev","slider__btnNext"],"mappings":"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","sourcesContent":["import styles from './Slider.module.scss';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nconst Slider = (props) => {\r\n    const sliderRef = useRef(null);\r\n    const slideRef = useRef(null);\r\n\r\n    let slideWidth = null;\r\n    let slidesCount = null;\r\n    const [slideStyle,changeSlideStyle] = useState({});\r\n    const [slideIndex, changeSlideIndex] = useState(0);\r\n    const handleBack = () => {\r\n        if(slideIndex !== 0) {\r\n            changeSlideIndex(slideIndex - 1)\r\n            changeSlideStyle({\r\n                transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\r\n            })\r\n            console.log(slideIndex)\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if(slideIndex !== slidesCount - 1) {\r\n            console.log(slidesCount)\r\n            changeSlideIndex(slideIndex + 1)\r\n            changeSlideStyle({\r\n                transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\r\n            })\r\n            console.log(slideIndex)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(slideRef) {\r\n            slideWidth = slideRef.current.getBoundingClientRect().width;\r\n            slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className={styles.slider} ref={sliderRef}>\r\n            <div className={styles.slider__container} ref={slideRef} style={{\r\n                transform: 'translateX(' + -slideWidth * slideIndex + 'px)'\r\n            }}>\r\n                {/* <div className={styles.slider__innerContainer}> */}\r\n                    { props.children }\r\n                {/* </div> */}\r\n            </div>\r\n            <div className={styles.slider__btnWrap}>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnPrev} onClick={handleBack}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnNext} onClick={handleNext}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}