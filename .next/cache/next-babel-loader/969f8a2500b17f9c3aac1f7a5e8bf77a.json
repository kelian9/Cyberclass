{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\cyberclass\\\\src\\\\components\\\\ui\\\\Slider\\\\Slider.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './Slider.module.scss';\nimport { useRef, useState, useEffect } from 'react';\n\nconst Slider = props => {\n  const sliderRef = useRef(null);\n  const slideRef = useRef(null);\n  let slideWidth = null;\n  let slidesCount = null;\n  const {\n    0: slideStyle,\n    1: changeSlideStyle\n  } = useState({});\n  const {\n    0: slideIndex,\n    1: changeSlideIndex\n  } = useState(0);\n\n  const handleBack = () => {\n    if (slideIndex !== 0) {\n      changeSlideStyle({\n        transform: 'translateX(' + -slideWidth * (slideIndex - 1) + 'px)'\n      });\n      changeSlideIndex(slideIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (slideIndex !== slidesCount - 1) {\n      changeSlideStyle({\n        transform: 'translateX(' + -slideWidth * (slideIndex + 1) + 'px)'\n      });\n      changeSlideIndex(slideIndex + 1);\n    }\n  };\n\n  const handleTouch = e => {\n    let touches = e.changedTouches;\n    const touchDivision = touches[touches.length - 1].clientX - touches[0].clientX;\n\n    if (touchDivision > slideWidth / 2.5) {\n      handleBack();\n    } else if (touchDivision < slideWidth / 2.5 && touchDivision < 0) {\n      handleNext();\n    } // if(slideIndex !== 0) {\n    //     changeSlideStyle({\n    //         transform: 'translateX(' + -slideWidth * (slideIndex-1) + 'px)'\n    //     })\n    //     changeSlideIndex(slideIndex - 1)\n    // }\n\n  };\n\n  useEffect(() => {\n    if (slideRef) {\n      slideWidth = slideRef.current.getBoundingClientRect().width;\n      slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.slider,\n    ref: sliderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.slider__container,\n    ref: slideRef,\n    style: slideStyle,\n    onTouchMove: handleTouch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, props.children), __jsx(\"div\", {\n    className: styles.slider__btnWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnPrev,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), __jsx(\"button\", {\n    className: styles.slider__btn + ' ' + styles.slider__btnNext,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/arrow-left.svg\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/User/Projects/cyberclass/src/components/ui/Slider/Slider.tsx"],"names":["styles","useRef","useState","useEffect","Slider","props","sliderRef","slideRef","slideWidth","slidesCount","slideStyle","changeSlideStyle","slideIndex","changeSlideIndex","handleBack","transform","handleNext","handleTouch","e","touches","changedTouches","touchDivision","length","clientX","current","getBoundingClientRect","width","Math","ceil","scrollWidth","slider","slider__container","children","slider__btnWrap","slider__btn","slider__btnPrev","slider__btnNext"],"mappings":"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","sourcesContent":["import styles from './Slider.module.scss';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\ninterface UIEvent {\r\n    targetTouches: { pageX: number; pageY: number; }[];\r\n    // etc...\r\n}\r\n\r\nconst Slider = (props) => {\r\n    const sliderRef = useRef(null);\r\n    const slideRef = useRef(null);\r\n\r\n    let slideWidth = null;\r\n    let slidesCount = null;\r\n    const [slideStyle,changeSlideStyle] = useState({});\r\n    const [slideIndex, changeSlideIndex] = useState(0);\r\n    const handleBack = () => {\r\n        if(slideIndex !== 0) {\r\n            changeSlideStyle({\r\n                transform: 'translateX(' + -slideWidth * (slideIndex-1) + 'px)'\r\n            })\r\n            changeSlideIndex(slideIndex - 1)\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if(slideIndex !== slidesCount - 1) {\r\n            changeSlideStyle({\r\n                transform: 'translateX(' + -slideWidth * (slideIndex + 1) + 'px)'\r\n            })\r\n            changeSlideIndex(slideIndex + 1)\r\n        }\r\n    }\r\n\r\n    const handleTouch = (e:any) => {\r\n        let touches = e.changedTouches;\r\n        const touchDivision = touches[touches.length - 1].clientX - touches[0].clientX;\r\n        if(touchDivision > slideWidth/2.5) {\r\n            handleBack()\r\n        }\r\n        else if(touchDivision < slideWidth/2.5 && touchDivision < 0) {\r\n            handleNext()\r\n        }\r\n        // if(slideIndex !== 0) {\r\n        //     changeSlideStyle({\r\n        //         transform: 'translateX(' + -slideWidth * (slideIndex-1) + 'px)'\r\n        //     })\r\n        //     changeSlideIndex(slideIndex - 1)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(slideRef) {\r\n            slideWidth = slideRef.current.getBoundingClientRect().width;\r\n            slidesCount = Math.ceil(slideRef.current.scrollWidth / sliderRef.current.getBoundingClientRect().width);\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className={styles.slider} ref={sliderRef}>\r\n            <div className={styles.slider__container} ref={slideRef} style={slideStyle} onTouchMove={handleTouch}>\r\n                {/* <div className={styles.slider__innerContainer}> */}\r\n                    { props.children }\r\n                {/* </div> */}\r\n            </div>\r\n            <div className={styles.slider__btnWrap}>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnPrev} onClick={handleBack}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n                <button className={styles.slider__btn + ' ' + styles.slider__btnNext} onClick={handleNext}>\r\n                    <img src=\"/static/images/arrow-left.svg\" alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}