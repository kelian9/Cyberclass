{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { environment } from './environment/environment';\nexport var ProfileAPI = {\n  getProfileData: function getProfileData() {\n    return axios.get(\"\".concat(environment.apiEndPoint, \"/Profile/GetMyProfile\"), {\n      headers: {\n        'Authorization': \"Bearer \".concat(JSON.parse(localStorage.getItem('token')).token)\n      }\n    });\n  },\n  editProfileData: function editProfileData(profile) {\n    return axios.post(\"\".concat(environment.apiEndPoint, \"/Profile/EditMyProfile\"), _objectSpread({}, profile), {\n      headers: {\n        'Authorization': \"Bearer \".concat(JSON.parse(localStorage.getItem('token')).token)\n      }\n    });\n  },\n  setAvatar: function setAvatar(avatar) {\n    return axios.post(\"\".concat(environment.apiEndPoint, \"/Profile/SetAvatar\"), avatar, {\n      headers: {\n        'Authorization': \"Bearer \".concat(JSON.parse(localStorage.getItem('token')).token),\n        'content-type': 'multipart/form-data'\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module"}