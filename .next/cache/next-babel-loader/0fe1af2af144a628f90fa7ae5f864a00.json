{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styles from './Lesson.module.scss';\nimport LessonCard from \"../../components/ui/LessonCard/LessonCard\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport checkLoggedIn from '../../common/checkLoggedIn';\nimport { LessonsAPI } from '../../api/lessons';\nimport { setLessons } from '../../store/actions/lessons-actions';\nimport { RatingAPI } from '../../api/rating';\nimport { setMaterials, rateMaterialState } from '../../store/actions/materials-actions';\n\nconst Lesson = ({\n  store\n}) => {\n  var _store$getState$Mater;\n\n  const router = useRouter();\n  const materialState = (_store$getState$Mater = store.getState().MaterialsReducer) === null || _store$getState$Mater === void 0 ? void 0 : _store$getState$Mater.find(({\n    id\n  }) => id === +router.query.materialID);\n  const lessonsState = store.getState().LessonsReducer;\n  const {\n    0: selectedLesson,\n    1: selectLesson\n  } = useState(null);\n  const {\n    0: lessonsCount,\n    1: setLessonsCount\n  } = useState(6);\n  const {\n    0: tab,\n    1: changeTab\n  } = useState(0);\n\n  const rateMaterial = type => {\n    checkLoggedIn() && !materialState.myLike && !materialState.myDislike ? RatingAPI.rateMaterial(+router.query.materialID, type).then(response => {\n      store.dispatch(rateMaterialState({\n        id: +router.query.materialID,\n        ratingType: type\n      }));\n      console.log(response);\n    }).catch(err => console.log(err)) : null;\n  };\n\n  const getPaidLessons = () => {\n    LessonsAPI.getPaidLessons().then(response => {\n      store.dispatch(setLessons(response.data));\n      selectLesson(response.data[0]);\n      changeTab(1);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getLessons = materialID => {\n    (checkLoggedIn() ? LessonsAPI.getLessons(materialID) : LessonsAPI.getNotAuthorizeLessons(materialID)).then(response => {\n      store.dispatch(setLessons(response.data));\n      selectLesson(response.data[0]);\n      changeTab(0);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getCourse = () => {\n    (checkLoggedIn() ? LessonsAPI.getMaterials() : LessonsAPI.getNotAuthorizeMaterials()).then(response => {\n      store.dispatch(setMaterials(response.data));\n      getLessons(response.data[0].id);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    !materialState ? getCourse() : null;\n    lessonsState.length == 0 ? getLessons(+router.query.materialID) : null;\n    !selectedLesson ? selectLesson(lessonsState[0]) : null; // selectedLesson?.url.slice(0,8) + 'player.' + selectedLesson?.url.slice(8,18) + 'video/' + selectedLesson?.url.slice(18)\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles['selected-lesson']\n  }, (selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.url) ? // <iframe src={selectedLesson?.url} allow=\"autoplay; fullscreen\" frameBorder=\"0\"></iframe>\n  // '//playercdn.cdnvideo.ru/aloha/players/cyberclass_player1.html?source=//cyberclass-cache.cdnvideo.ru/cyberclass/1.%20Osnovi_mst.mp4'\n  __jsx(\"iframe\", {\n    src: selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.url,\n    frameBorder: \"0\",\n    scrolling: \"no\",\n    style: {\n      overflow: 'hidden'\n    },\n    allowFullScreen: true\n  }) : __jsx(\"div\", {\n    className: styles['selected-lesson_preview']\n  }, __jsx(\"img\", {\n    src: selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.preview,\n    alt: \"\"\n  }), __jsx(\"img\", {\n    src: \"/static/images/play-circle.svg\",\n    alt: \"\",\n    className: styles['play-icon']\n  }), __jsx(\"span\", {\n    className: styles.duration\n  }, selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.duration, \":00\"), __jsx(\"span\", {\n    className: styles['duration-line']\n  })), __jsx(\"div\", {\n    className: styles['selected-lesson_info']\n  }, __jsx(\"div\", {\n    className: styles['heading-row']\n  }, __jsx(\"img\", {\n    src: \"/static/images/fifa20.svg\",\n    alt: \"\"\n  }), __jsx(\"a\", {\n    className: \"transparent-btn\"\n  }, \"Get access to all cources\")), __jsx(\"h1\", null, \"0\", selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.number, \": \", selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.name), __jsx(\"h2\", null, \"\\u043E\\u0442 mozz \\u0438 klenoff\"), __jsx(\"p\", {\n    className: styles.rating\n  }, \"Rate this\\xA0\\xA0\\xA0\", materialState === null || materialState === void 0 ? void 0 : materialState.likeCount, \" \", __jsx(\"img\", {\n    src: \"/static/images/like.svg\",\n    alt: \"\",\n    onClick: () => rateMaterial(0),\n    className: (materialState === null || materialState === void 0 ? void 0 : materialState.myLike) ? styles['rated'] : null\n  }), \"\\xA0\\xA0\", materialState === null || materialState === void 0 ? void 0 : materialState.dislikeCount, \" \", __jsx(\"img\", {\n    src: \"/static/images/like.svg\",\n    alt: \"\",\n    onClick: () => rateMaterial(1),\n    className: (materialState === null || materialState === void 0 ? void 0 : materialState.myDislike) ? styles['rated'] : null\n  })), __jsx(\"p\", null, selectedLesson === null || selectedLesson === void 0 ? void 0 : selectedLesson.description), __jsx(\"button\", {\n    className: \"common-btn\"\n  }, \"Open workbook\"))), __jsx(\"div\", {\n    className: \"content-container\"\n  }, __jsx(\"div\", {\n    className: styles.tab\n  }, __jsx(\"div\", {\n    className: styles.tab_btns\n  }, __jsx(\"button\", {\n    className: !tab ? styles['tab-btn_active'] : null,\n    onClick: () => getLessons(+router.query.materialID)\n  }, \"Free lessons\"), __jsx(\"button\", {\n    className: tab ? styles['tab-btn_active'] : null,\n    onClick: () => getPaidLessons()\n  }, \"Buy lessons\")), __jsx(\"div\", {\n    className: styles.tab_view\n  }, lessonsState === null || lessonsState === void 0 ? void 0 : lessonsState.slice(0, lessonsCount).map((item, index) => __jsx(LessonCard, {\n    lesson: item,\n    selectLesson: id => selectLesson(lessonsState.find(item => item.id === id)),\n    key: index\n  }))), (lessonsState === null || lessonsState === void 0 ? void 0 : lessonsState.length) > 6 ? __jsx(\"button\", {\n    className: \"common-btn\",\n    onClick: () => lessonsState.length > lessonsCount ? setLessonsCount(lessonsCount + 3) : setLessonsCount(6)\n  }, lessonsState.length > lessonsCount ? 'Show more' : 'Hide') : null)));\n};\n\nexport default Lesson;","map":null,"metadata":{},"sourceType":"module"}