{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport '../common/styles/common.scss';\nimport AppLayout from '../components/layouts/AppLayout/AppLayout';\nimport { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport getStore from '../store/store';\nimport { useRouter } from 'next/router';\nimport withRedux from \"next-redux-wrapper\";\n\nvar makeStore = function makeStore(initialState, options) {\n  return getStore();\n};\n\nexport var App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      store = _ref.store;\n  var router = useRouter();\n\n  var _useState = useState(0),\n      pageWidth = _useState[0],\n      setPageWidth = _useState[1];\n\n  var _useState2 = useState(false),\n      activeHandle = _useState2[0],\n      setActiveHandle = _useState2[1];\n\n  useEffect(function () {\n    if (!activeHandle) {\n      setPageWidth(document.body.clientWidth);\n\n      document.body.onresize = function () {\n        setPageWidth(document.body.clientWidth);\n      };\n\n      setActiveHandle(true);\n    }\n\n    router.pathname === '/' ? router.push('/main') : null;\n  });\n  return __jsx(Provider, {\n    store: store\n  }, router.pathname != '/authorization' && !router.pathname.includes('/registration') ? __jsx(AppLayout, {\n    store: store\n  }, __jsx(Component, _extends({\n    store: store\n  }, pageProps, {\n    pageWidth: pageWidth\n  }))) : __jsx(Component, _extends({\n    store: store\n  }, pageProps, {\n    pageWidth: pageWidth\n  })));\n};\nexport default withRedux(makeStore)(App);","map":null,"metadata":{},"sourceType":"module"}